<%
	import org.exoplatform.wcm.webui.scv.UISingleContentViewerPortlet;
	import org.exoplatform.portal.application.PortalRequestContext;
	import javax.portlet.PortletPreferences;
	import org.exoplatform.services.wcm.core.WCMConfigurationService;
	import org.exoplatform.portal.webui.util.Util;
	import org.exoplatform.wcm.webui.Utils;
	import org.exoplatform.wcm.webui.scv.UIPresentation;	
	import javax.jcr.Node;
	import org.exoplatform.services.wcm.publication.lifecycle.stageversion.StageAndVersionPublicationConstant;
%>
<div class="$uicomponent.id">
	<%
		def portletId = uicomponent.getPortletId();
		def quickEditingBlockId = uicomponent.getPortletId() + "-QuickEditingBlock";
		def rcontext = _ctx.getRequestContext() ;
		rcontext.getJavascriptManager().addJavascript('eXo.wcm.insertQuickeditingBlock("' + portletId + '","' + quickEditingBlockId + '");');
		PortletPreferences preferences = rcontext.getRequest().getPreferences();
		String repository = preferences.getValue(UISingleContentViewerPortlet.REPOSITORY, null);    
		String workspace = preferences.getValue(UISingleContentViewerPortlet.WORKSPACE, null);
		String nodeIdentifier = preferences.getValue(UISingleContentViewerPortlet.IDENTIFIER, null) ;
		PortalRequestContext portalRequestContext = Util.getPortalRequestContext();
		String portalURI = portalRequestContext.getPortalURI();
		WCMConfigurationService wcmConfigurationService = uicomponent.getApplicationComponent(WCMConfigurationService.class);
		def isDraftRevision = uicomponent.isDraftRevision();
		def currentContentState = uicomponent.getCurrentContentState();
		def isObsoletedContent = uicomponent.isObsoletedContent();
		def hasLiveRevision = uicomponent.hasLiveRevision();
//		def isQuickPrint = uicomponent.isQuickPrint();
		def isQuickEditable = uicomponent.isQuickEditable();
		def isEditable = uicomponent.isEditable();
		def isLiveMode = Utils.isLiveMode();
		def renderable = false;
		boolean isShowPrint = Boolean.parseBoolean(preferences.getValue("ShowPrintAction", null)); 
		boolean isShowVote = Boolean.parseBoolean(preferences.getValue("ShowVote", null)); 
		boolean isShowComments = Boolean.parseBoolean(preferences.getValue("ShowComments", null));
		
		
		if (isLiveMode) {
			if (!StageAndVersionPublicationConstant.DRAFT_STATE.equals(currentContentState) && !isObsoletedContent) {
				renderable = true;
			}
		} else {
			if(!isObsoletedContent) {
				if(isQuickEditable) {
					if(isEditable) { 
						%>
							<div style="position: relative; height: 0px;" id="<%=quickEditingBlockId%>">
								<div style="position: absolute; width: 65px; right: 0px; top: 0px">
									<a class="QuickEdit" href="<%=uicomponent.event("QuickEdit")%>" title="<%= _ctx.appRes("UIPresentationContainer.title");%>"></a>				
								</div>
							</div>
						<% 
					} 
				} 
				if(isDraftRevision) {
					%>
		   				<div style="padding: 5px 10px; line-height: 16px; ">
		    				[ <span class="DraftIcon" style="padding-left: 20px"><%= _ctx.appRes("UIPresentationContainer.draft");%></span> ]
		    			</div>  
					<% 
				} 
				renderable = true;
			}
		}
		if (renderable) {
			if (isShowPrint || isShowVote || isShowComments) {
			%>	
					<div class="UIOptionBar"> 
			<%     
			} 
		
			if (isShowPrint) { 
				String isPrint = "?isPrint=true";
				if(nodeIdentifier != null) {
					nodeIdentifier = nodeIdentifier.indexOf("/") == -1 ? "/" + nodeIdentifier : nodeIdentifier;
				}
				String printUrl = portalURI + wcmConfigurationService.getRuntimeContextParam("printViewerPage") + "/" + repository + "/" + workspace + nodeIdentifier + isPrint;
				%>
	      				<a class="ActionIcon PrintIcon" href="javascript: void(0);" onclick="window.open('$printUrl')" title="<%= _ctx.appRes("UIPresentationContainer.optionBar.print.info");%>"><%= _ctx.appRes("UIPresentationContainer.optionBar.print.label");%></a>
				<% 
			} 
			if (isShowVote) { 
				%>	
	      				<a class="ActionIcon VoteIcon" href="javascript: void(0);" onclick="" title="<%= _ctx.appRes("UIPresentationContainer.optionBar.vote.info");%>"><%= _ctx.appRes("UIPresentationContainer.optionBar.vote.label");%></a>
				<% 
			} 
			if (isShowComments) { 
				%>	
	      				<a class="ActionIcon CommentIcon" href="javascript: void(0);" onclick="" title="<%= _ctx.appRes("UIPresentationContainer.optionBar.comment.info");%>"><%= _ctx.appRes("UIPresentationContainer.optionBar.comment.label");%></a>
				<% 
			} 

			if (isShowPrint || isShowVote || isShowComments) {
			%>	
					</div> 
			<%     
			} 

			uicomponent.renderChildren();
		}
	%>
</div>