Index: component/wcm/src/main/java/org/exoplatform/services/wcm/portal/impl/LivePortalManagerServiceImpl.java
===================================================================
--- component/wcm/src/main/java/org/exoplatform/services/wcm/portal/impl/LivePortalManagerServiceImpl.java	(revision 64999)
+++ component/wcm/src/main/java/org/exoplatform/services/wcm/portal/impl/LivePortalManagerServiceImpl.java	(working copy)
@@ -24,6 +24,7 @@
 
 import javax.jcr.Node;
 import javax.jcr.NodeIterator;
+import javax.jcr.PathNotFoundException;
 import javax.jcr.Session;
 import javax.jcr.query.Query;
 import javax.jcr.query.QueryResult;
@@ -97,9 +98,18 @@
   /* (non-Javadoc)
    * @see org.exoplatform.services.wcm.portal.LivePortalManagerService#getLivePortal(java.lang.String, java.lang.String, org.exoplatform.services.jcr.ext.common.SessionProvider)
    */
-  public final Node getLivePortal(final SessionProvider sessionProvider, final String repository, final String portalName) throws Exception {
-    Node portalsStorage = getLivePortalsStorage(sessionProvider, repository);
-    return portalsStorage.getNode(portalName); 
+  public final Node getLivePortal(final SessionProvider sessionProvider, final String repository, final String portalName) {    
+    Node node = null;
+    try{
+    	Node portalsStorage = getLivePortalsStorage(sessionProvider, repository);
+    	node = portalsStorage.getNode(portalName);     	
+    }catch (PathNotFoundException pne){
+    	livePortalPaths.remove(portalName);
+    }catch (Exception e){
+    	livePortalPaths.remove(portalName);
+    	log.error("Error when get Live Portal " + portalName, e.fillInStackTrace());
+    }    
+    return node;
   }
 
   /* (non-Javadoc)
@@ -177,11 +187,13 @@
     //Remove site content folder for the portal in this version
     //for next version, we will move it to backup ws
     Node node = getLivePortal(sessionProvider, portalConfig.getName());
-    Session session = node.getSession();
-    node.remove();
-    session.save();
-    session.logout();
-    livePortalPaths.remove(portalConfig.getName());
+    if (node != null){
+        Session session = node.getSession();
+    	node.remove();
+    	session.save();
+    	session.logout();
+    	livePortalPaths.remove(portalConfig.getName());
+    }  
   }
 
   /* (non-Javadoc)
Index: component/wcm/src/main/java/org/exoplatform/services/wcm/portal/listener/RemoveLivePortalEventListener.java
===================================================================
--- component/wcm/src/main/java/org/exoplatform/services/wcm/portal/listener/RemoveLivePortalEventListener.java	(revision 64999)
+++ component/wcm/src/main/java/org/exoplatform/services/wcm/portal/listener/RemoveLivePortalEventListener.java	(working copy)
@@ -16,17 +16,16 @@
  */
 package org.exoplatform.services.wcm.portal.listener;
 
-import javax.jcr.Node;
-
+import javax.jcr.PathNotFoundException;
 import org.apache.commons.logging.Log;
 import org.exoplatform.portal.config.jcr.DataStorageImpl;
 import org.exoplatform.portal.config.model.PortalConfig;
 import org.exoplatform.services.cms.drives.ManageDriveService;
+import org.exoplatform.services.jcr.RepositoryService;
 import org.exoplatform.services.jcr.ext.common.SessionProvider;
 import org.exoplatform.services.listener.Event;
 import org.exoplatform.services.listener.Listener;
 import org.exoplatform.services.log.ExoLogger;
-import org.exoplatform.services.wcm.core.NodeLocation;
 import org.exoplatform.services.wcm.portal.LivePortalManagerService;
 import org.exoplatform.services.wcm.portal.artifacts.RemovePortalArtifactsService;
 import org.exoplatform.services.wcm.utils.WCMCoreUtils;
@@ -49,11 +48,10 @@
   	String portalName = portalConfig.getName();
   	LivePortalManagerService livePortalManagerService = WCMCoreUtils.getService(LivePortalManagerService.class);
   	SessionProvider sessionProvider = WCMCoreUtils.getSessionProvider();    
-  	Node portal = livePortalManagerService.getLivePortal(sessionProvider, portalName);
-  	
-  	// Remove drive for the site content storage
+    	// Remove drive for the site content storage
   	ManageDriveService manageDriveService = WCMCoreUtils.getService(ManageDriveService.class);    
-  	String repository = NodeLocation.make(portal).getRepository();
+  	RepositoryService reoService = WCMCoreUtils.getService(RepositoryService.class);
+  	String repository = reoService.getCurrentRepository().getConfiguration().getName();
   	try {
   		manageDriveService.removeDrive(portalName, repository);
   		log.info("Removed drive for portal: " + portalName);
@@ -69,11 +67,14 @@
   	try {
   		livePortalManagerService.removeLivePortal(sessionProvider, portalConfig);
   		log.info("Removed resource storage for portal: " + portalName);
+		} catch(PathNotFoundException pne) {
+			//Do nothing in the case content storage was removed already	
+			log.error("Path not found for the portal to remove its resource" + portalName, pne.fillInStackTrace());
 		} catch (Exception e) {
 			log.error("Error when remove resource storage: " + portalName, e.fillInStackTrace());
-		}
-  	
-    sessionProvider.close();
+		}finally{
+			 sessionProvider.close();
+		}   
   }
 
 }
Index: component/wcm/src/main/java/org/exoplatform/services/wcm/category/RemoveTaxonomyPlugin.java
===================================================================
--- component/wcm/src/main/java/org/exoplatform/services/wcm/category/RemoveTaxonomyPlugin.java	(revision 64999)
+++ component/wcm/src/main/java/org/exoplatform/services/wcm/category/RemoveTaxonomyPlugin.java	(working copy)
@@ -24,7 +24,7 @@
 import org.exoplatform.services.cms.taxonomy.TaxonomyService;
 import org.exoplatform.services.jcr.RepositoryService;
 import org.exoplatform.services.jcr.ext.common.SessionProvider;
-import org.exoplatform.services.wcm.portal.artifacts.RemovePortalPlugin;
+import org.exoplatform.services.wcm.portal.artifacts.RemovePortalPlugin;;
 
 /**
  * Created by The eXo Platform SAS
@@ -69,9 +69,15 @@
    * @see org.exoplatform.services.wcm.portal.artifacts.BasePortalArtifactsPlugin#deployToPortal(java.lang.String, org.exoplatform.services.jcr.ext.common.SessionProvider)
    */
   public void invalidateFromPortal(SessionProvider sessionProvider, String portalName) throws Exception {
-  	String repository = repositoryService.getCurrentRepository().getConfiguration().getName();
+  	String repository = repositoryService.getCurrentRepository().getConfiguration().getName();  
+  	try{
   	Node taxonomyTreeNode = taxonomyService.getTaxonomyTree(repository, portalName, true);
-  	actionServiceContainer.removeAction(taxonomyTreeNode, repository);
-    taxonomyService.removeTaxonomyTree(portalName);
+  	if (taxonomyTreeNode != null){
+  		actionServiceContainer.removeAction(taxonomyTreeNode, repository);
+  	} 
+  	taxonomyService.removeTaxonomyTree(portalName);
+  	}catch (Exception e){
+  		taxonomyService.removeTaxonomyTree(portalName);
+  	}  	
   }
 }
