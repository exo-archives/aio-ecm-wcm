Index: portlets/presentation/src/main/java/org/exoplatform/wcm/webui/clv/config/UICLVConfig.java
===================================================================
--- portlets/presentation/src/main/java/org/exoplatform/wcm/webui/clv/config/UICLVConfig.java	(revision 68561)
+++ portlets/presentation/src/main/java/org/exoplatform/wcm/webui/clv/config/UICLVConfig.java	(working copy)
@@ -22,23 +22,18 @@
 import java.util.List;
 
 import javax.jcr.Node;
-import javax.jcr.Session;
 import javax.portlet.PortletMode;
 import javax.portlet.PortletPreferences;
 
 import org.exoplatform.ecm.webui.selector.UISelectable;
-import org.exoplatform.portal.config.UserPortalConfigService;
-import org.exoplatform.portal.config.model.Page;
 import org.exoplatform.portal.config.model.PortalConfig;
-import org.exoplatform.portal.webui.application.UIPortlet;
-import org.exoplatform.portal.webui.util.Util;
 import org.exoplatform.services.cms.link.LinkManager;
+import org.exoplatform.portal.webui.util.Util;
 import org.exoplatform.services.cms.views.ApplicationTemplateManagerService;
 import org.exoplatform.services.jcr.RepositoryService;
 import org.exoplatform.services.jcr.core.ManageableRepository;
 import org.exoplatform.services.wcm.core.WCMConfigurationService;
 import org.exoplatform.services.wcm.publication.PublicationUtil;
-import org.exoplatform.services.wcm.publication.WCMPublicationService;
 import org.exoplatform.services.wcm.utils.WCMCoreUtils;
 import org.exoplatform.wcm.webui.Utils;
 import org.exoplatform.wcm.webui.clv.UICLVContainer;
@@ -98,10 +93,7 @@
   /** The content list. */
   private List<String>       contentList                  = new ArrayList<String>();
   
-  /** The old content list. */
-  private List<String>       oldContentList                  = new ArrayList<String>();
-
-  /** The Constant HEADER. */
+   /** The Constant HEADER. */
   public final static String HEADER                       = "Header";
 
   /** The Constant PORTLET_NAME. */
@@ -321,8 +313,7 @@
       String [] listContent = UICLVPortlet.getContentsByPreference();
       if (listContent != null && listContent.length != 0) {
       	contentList = Arrays.asList(listContent);   
-      	oldContentList = contentList;
-      }
+            }
     } else {
       viewerModeRadioBoxInput.setValue(VIEWER_AUTO_MODE);
       orderBySelectBox.setRendered(true);
@@ -375,16 +366,7 @@
     return this.contentList;
   }
   
-  /**
-   * Gets the old content list.
-   * 
-   * @return the old content list
-   */
-  public List<String> getOldContentList() {
-  	return this.oldContentList;
-  }
-  
-  /*
+   /*
    * (non-Javadoc)
    * 
    * @see org.exoplatform.ecm.webui.selector.UISelectable#doSelect(java.lang.String,
@@ -484,17 +466,7 @@
     public void execute(Event<UICLVConfig> event) throws Exception {
       UICLVConfig uiViewerManagementForm = event.getSource();
 
-      List<String> selectedList = uiViewerManagementForm.getViewAbleContentList();
-      List<String> oldContentList = uiViewerManagementForm.getOldContentList();
       PortletRequestContext portletRequestContext = (PortletRequestContext) event.getRequestContext();
-
-      String portletId = "";
-      UIPortlet uiPortlet = Util.getUIPortal().findComponentById(portletRequestContext.getWindowId());
-      if (uiPortlet != null) {
-      	portletId = uiPortlet.getWindowId();
-      } else if (!portletRequestContext.getWindowId().contains("#")) {
-      	portletId = generatePorletId(portletRequestContext.getWindowId(), portletRequestContext);
-      }
       
       PortletPreferences portletPreferences = portletRequestContext.getRequest().getPreferences();
       String currentViewerMode = portletPreferences.getValue(UICLVPortlet.VIEWER_MODE, null);
@@ -552,14 +524,7 @@
       portletPreferences.store();
       
       if (!Utils.isQuickEditMode(uiViewerManagementForm, "UIViewerManagementPopupWindow")) {
-		
-		
-      	if (currentViewerMode.equals(UICLVConfig.VIEWER_MANUAL_MODE)) {
-      	  uiViewerManagementForm.doSuspendPublication(repository, workspace, portletRequestContext, oldContentList, portletId);
-      	}
-      	if (newViewerMode.equals(UICLVConfig.VIEWER_MANUAL_MODE)) {
-      		uiViewerManagementForm.doPublication(repository, workspace, portletRequestContext, selectedList, portletId);
-      	}
+	      	
       	if (uiViewerManagementForm.isManualMode()) {
           String[] sl = (String[]) uiViewerManagementForm.getViewAbleContentList().toArray(new String[0]);
           portletPreferences.setValues(UICLVPortlet.CONTENT_LIST, sl);
@@ -582,16 +547,12 @@
             uiContentListViewerPortlet.removeChild(UICLVFolderMode.class);
             uiCorrectContentsViewer = uiContentListViewerPortlet.addChild(UICLVManualMode.class, null, UIPortletApplication.VIEW_MODE+"-" + Calendar.getInstance().getTimeInMillis());
             uiCorrectContentsViewer.init();
-            uiViewerManagementForm.doPublication(repository, workspace, portletRequestContext, selectedList, portletId);
-          }
+                     }
          } else if (currentViewerMode.equals(UICLVConfig.VIEWER_MANUAL_MODE)) {
-        	 uiViewerManagementForm.doSuspendPublication(repository, workspace,
-        			 portletRequestContext, oldContentList, portletId);
-          if (newViewerMode.equals(UICLVConfig.VIEWER_MANUAL_MODE)) {
+            if (newViewerMode.equals(UICLVConfig.VIEWER_MANUAL_MODE)) {
             uiCorrectContentsViewer = uiContentListViewerPortlet.getChild(UICLVManualMode.class);            
             uiCorrectContentsViewer.getChildren().clear();
             uiCorrectContentsViewer.init();
-            uiViewerManagementForm.doPublication(repository, workspace, portletRequestContext, selectedList, portletId);
           } else if (newViewerMode.equals(UICLVConfig.VIEWER_AUTO_MODE)) {            
             uiContentListViewerPortlet.removeChild(UICLVManualMode.class);
             uiFolderViewer = uiContentListViewerPortlet.addChild(UICLVFolderMode.class, null, UIPortletApplication.VIEW_MODE+"-" +Calendar.getInstance().getTimeInMillis());
@@ -609,76 +570,8 @@
       }
     }
   }
-
-  /**
-   * Do publication.
-   * 
-   * @param repository the repository
-   * @param workspaceName the workspace name
-   * @param portletRequestContext the portlet request context
-   * @param selectedList the selected list
-   * @param portletId the portlet id
-   * 
-   * @throws Exception the exception
-   */
-  private void doPublication(
-  		String repository, String workspaceName, PortletRequestContext portletRequestContext,
-  		List<String> selectedList, String portletId)
-  throws Exception {
-  	RepositoryService repositoryService = (RepositoryService)getApplicationComponent(RepositoryService.class);
-  	ManageableRepository manageableRepository = repositoryService.getRepository(repository);
-  	Session session = Utils.getSessionProvider().getSession(workspaceName, manageableRepository);
-  	WCMPublicationService publicationService = this.getApplicationComponent(WCMPublicationService.class);
-  	String pageId = Util.getUIPortal().getSelectedNode().getPageReference();
-  	UserPortalConfigService upcService = getApplicationComponent(UserPortalConfigService.class);
-  	Page page = upcService.getPage(pageId);
-
-  	Node tempNode;
-  	String siteName = Util.getPortalRequestContext().getPortalOwner();
-  	String remoteUser = portletRequestContext.getRemoteUser();  	
-  	for(String nodePath : selectedList) {  		
-  		tempNode = (Node)session.getItem(nodePath);
-  		if (tempNode.isNodeType("exo:symlink")) tempNode = linkManager.getTarget(tempNode);
-  		if (!publicationService.isEnrolledInWCMLifecycle(tempNode)) {
-  			publicationService.updateLifecyleOnChangeContent(tempNode, siteName, remoteUser);
-  		}
-  		publicationService.publishContentCLV(tempNode, page, portletId, siteName, remoteUser);
-  	}
-  }
   
   /**
-   * Do suspend publication.
-   * 
-   * @param repository the repository
-   * @param workspaceName the workspace name
-   * @param portletRequestContext the portlet request context
-   * @param oldList the old list
-   * @param portletId the portlet id
-   * 
-   * @throws Exception the exception
-   */
-  private void doSuspendPublication(
-  		String repository, String workspaceName, PortletRequestContext portletRequestContext,
-  		List<String> oldList, String portletId)
-  throws Exception {
-  	RepositoryService repositoryService = (RepositoryService)getApplicationComponent(RepositoryService.class);
-  	ManageableRepository manageableRepository = repositoryService.getRepository(repository);
-  	Session session = Utils.getSessionProvider().getSession(workspaceName, manageableRepository);
-  	WCMPublicationService publicationService = this.getApplicationComponent(WCMPublicationService.class);
-  	String pageId = Util.getUIPortal().getSelectedNode().getPageReference();
-  	UserPortalConfigService upcService = getApplicationComponent(UserPortalConfigService.class);
-  	Page page = upcService.getPage(pageId);
-
-  	for(String nodePath : oldList) {
-  	  Node node = (Node)session.getItem(nodePath);
-  	  if (node.isNodeType("exo:taxonomyLink")) {
-  	    node = linkManager.getTarget((Node)session.getItem(nodePath));
-  	  } 
-  		publicationService.suspendPublishedContentFromPage(node, page, portletRequestContext.getRemoteUser());
-  	}
-  }
-  
-  /**
    * Generate porlet id.
    * 
    * @param windowId the window id
