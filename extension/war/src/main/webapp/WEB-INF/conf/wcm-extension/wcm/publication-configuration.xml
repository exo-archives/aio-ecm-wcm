<?xml version="1.0" encoding="ISO-8859-1"?>
<configuration
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://www.exoplaform.org/xml/ns/kernel_1_0.xsd http://www.exoplaform.org/xml/ns/kernel_1_0.xsd"
   xmlns="http://www.exoplaform.org/xml/ns/kernel_1_0.xsd">
   
	<component>
    <key>org.exoplatform.services.wcm.publication.WCMPublicationService</key>
    <type>org.exoplatform.services.wcm.publication.WCMPublicationServiceImpl</type>
    <component-plugins>
		  <component-plugin>
		    <name>States and versions based publication</name>
		    <set-method>addPublicationPlugin</set-method>
		    <type>org.exoplatform.services.wcm.publication.lifecycle.stageversion.StageAndVersionPublicationPlugin</type>
		    <description>This publication lifecycle publish a web content or DMS document to a portal page with more state and version.</description>	    	    	   
		  </component-plugin>
		  <component-plugin>
		    <name>Simple publication</name>
		    <set-method>addPublicationPlugin</set-method>
		    <type>org.exoplatform.services.wcm.publication.lifecycle.simple.SimplePublicationPlugin</type>
		    <description>This publication lifecycle publish a web content or DMS document to a portal page without version</description>	    	    	   
		  </component-plugin>
	  </component-plugins>
  </component>

	<component>
	  <key>org.exoplatform.services.wcm.publication.WCMComposer</key>
	  <type>org.exoplatform.services.wcm.publication.WCMComposerImpl</type>
	  <init-params>
		<value-param>
			<name>useCache</name>
			<value>true</value>
		</value-param>
	  </init-params>
	</component>	

  <external-component-plugins>
    <target-component>org.exoplatform.services.cache.CacheService</target-component>
    <component-plugin>
      <name>addExoCacheConfig</name>
      <set-method>addExoCacheConfig</set-method>
      <type>org.exoplatform.services.cache.ExoCacheConfigPlugin</type>
      <description>Configures the cache for query service</description>
      <init-params>
	      <object-param>
	        <name>cache.config.wcm.composer</name>
	        <description>The default cache configuration</description>
	        <object type="org.exoplatform.services.cache.ExoCacheConfig">
	          <field name="name"><string>wcm.composer</string></field>
	          <field name="maxSize"><int>300</int></field>
	          <field name="liveTime"><long>600</long></field>
	          <field name="distributed"><boolean>false</boolean></field>
	          <field name="implementation"><string>org.exoplatform.services.cache.concurrent.ConcurrentFIFOExoCache</string></field> 
	        </object>
	      </object-param>
      </init-params>
    </component-plugin>
  </external-component-plugins>

	<!-- 
	WE USE THIS HANDLER TO ENROLL DOCUMENTS (UNTIL DMS 2.5.1)
	-->
  <external-component-plugins>
  	<target-component>org.exoplatform.services.wcm.core.WebSchemaConfigService</target-component>		
	  <component-plugin>
	    <name>StageAndVersionPublicationHandler</name>
	    <set-method>addWebSchemaHandler</set-method>
	    <type>org.exoplatform.services.wcm.publication.lifecycle.stageversion.StageAndVersionPublicationHandler</type>	    
	  </component-plugin>
	</external-component-plugins>
	
	<external-component-plugins>
		<target-component>org.exoplatform.services.listener.ListenerService</target-component>
		<component-plugin>
      <name>UserPortalConfigService.page.onCreate</name>
      <set-method>addListener</set-method>
      <type>org.exoplatform.services.wcm.publication.listener.page.CreatePageEventListener</type>
      <description>this listener update publication state of content when page is created</description>
    </component-plugin>
    <component-plugin>
      <name>UserPortalConfigService.page.onUpdate</name>
      <set-method>addListener</set-method>
      <type>org.exoplatform.services.wcm.publication.listener.page.UpdatePageEventListener</type>
      <description>this listener update publication state of content when page is updated</description>
    </component-plugin>
    <component-plugin>
      <name>UserPortalConfigService.page.onRemove</name>
      <set-method>addListener</set-method>
      <type>org.exoplatform.services.wcm.publication.listener.page.RemovePageEventListener</type>
      <description>this listener update publication state of content when page is removed</description>
    </component-plugin>
    <component-plugin>
      <name>UserPortalConfigService.navigation.onUpdate</name>
      <set-method>addListener</set-method>
      <type>org.exoplatform.services.wcm.publication.listener.navigation.UpdateNavigationEventListener</type>
      <description>this listener update publication state of content when navigation is updated</description>
    </component-plugin>
    <component-plugin>
      <name>UserPortalConfigService.navigation.onRemove</name>
      <set-method>addListener</set-method>
      <type>org.exoplatform.services.wcm.publication.listener.navigation.RemoveNavigationEventListener</type>
      <description>this listener update publication state of content when navigation is removed</description>
    </component-plugin>
  </external-component-plugins>
	<!-- 
	WE USE CMS CONTENT EVENT LISTENER TO ENROLL CONTENTS (DMS like exo:article OR WCM like exo:webContent) 
	THIS EVENT ISN'T BROADCASTED FOR UPLOADED DOCUMENTS (UNTIL DMS 2.5.1)
	-->
	<external-component-plugins>
		<target-component>org.exoplatform.services.listener.ListenerService</target-component>
		<component-plugin>
      <name>CmsService.event.postCreate</name>
      <set-method>addListener</set-method>
      <type>org.exoplatform.services.wcm.publication.listener.post.PostCreateContentEventListener</type>
      <description>this listener will force the created document enroll to publication lifecycle</description>
    </component-plugin>    
    <component-plugin>
      <name>CmsService.event.postEdit</name>
      <set-method>addListener</set-method>
      <type>org.exoplatform.services.wcm.publication.listener.post.PostEditContentEventListener</type>
      <description>this listener will change state of document to draft after editing</description>
    </component-plugin>
  </external-component-plugins>
</configuration>
