<%
  import javax.jcr.Node;
	import java.util.List;
  import org.exoplatform.services.cms.taxonomy.TaxonomyService;
	import org.exoplatform.services.cms.folksonomy.FolksonomyService;
	import org.exoplatform.services.wcm.skin.XSkinService;
	import org.exoplatform.services.wcm.javascript.XJavascriptService;
	import org.exoplatform.services.jcr.core.ManageableRepository;
	
	public boolean getPortletPreference(String name) {
    String value = _ctx.getRequestContext().getRequest().getPreferences().getValue(name, null);
    if(value != null) return Boolean.parseBoolean(value);
    return false;
  }
  
  def currentNode = uicomponent.getNode() ; 
  def css = uicomponent.getApplicationComponent(XSkinService.class).getActiveStylesheet(currentNode);
  def js =  uicomponent.getApplicationComponent(XJavascriptService.class).getActiveJavaScript(currentNode) ;
  def html = currentNode.getNode("default.html").getNode("jcr:content").getProperty("jcr:data").getString();
  
	boolean isShowCategories = getPortletPreference("ShowCategories");
	boolean isShowTags = getPortletPreference("ShowTags");

	if((css != null) && (css.length() > 0)) {
		%>
			<style type="text/css">
				/* <![CDATA[ */			
					<%=css%>
				/* ]]> */
				</style>
		<%
	}

	if((js != null) && (js.length() > 0)) {
		%>
			<script type="text/javascript">
			/* <![CDATA[ */	
				<%=js%>
			/* ]]> */		
			</script>
		<% 
	}
	
	if (isShowCategories || isShowTags) {
		%>
			<div class="WebContentContainer">
				<div class="WebContentInformation">
					<% 
						if(isShowCategories) {
							TaxonomyService taxonomyService = uicomponent.getApplicationComponent(TaxonomyService.class);
			      	List<Node> categoryNodeList = taxonomyService.getAllCategories(currentNode);
			      	if (!categoryNodeList.isEmpty()) {
			      		StringBuffer categories = new StringBuffer();
				       	for (Node category: categoryNodeList) {
				        	categories.append(category.getName()).append(", ");
				       	}
				    	 	categories.replace(categories.lastIndexOf(", "), categories.size(), "");
								%>
						  		<span class="Categories"><strong><%=_ctx.appRes("Category.view.label")%>:</strong> <%= categories.toString(); %></span>
								<%		
			      	}
						}
						if(isShowTags) {
							FolksonomyService folkService = uicomponent.getApplicationComponent(FolksonomyService.class);
							def repositoryName = ((ManageableRepository)currentNode.getSession().getRepository()).getConfiguration().getName();
							List<Node> tagList = folkService.getLinkedTagsOfDocument(currentNode, repositoryName);
							if(!tagList.isEmpty()) {
								StringBuffer tagBuff = new StringBuffer("[");
								for(Node tag: tagList) {
									tagBuff.append(tag.getName()).append(", ");
								}
								tagBuff.replace(tagBuff.lastIndexOf(", "), tagBuff.size(), "]");
								%>
									<span class="Tags"><strong><%=_ctx.appRes("Tag.view.label")%>:</strong> <%= tagBuff.toString(); %></span>
								<%	
							}	
						}
					%>
				</div>
				$html
			</div>
		<%
	} else {
		%>$html<%
	}
%>