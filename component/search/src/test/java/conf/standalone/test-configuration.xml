<?xml version="1.0" encoding="ISO-8859-1"?>
<configuration>

	<!--  Environment -->
	<component>
		<key>org.exoplatform.services.log.LogConfigurationInitializer</key>
		<type>org.exoplatform.services.log.LogConfigurationInitializer</type>
		<init-params>
			<value-param>
				<name>logger</name>
				<value>org.exoplatform.services.log.impl.BufferedLog4JLogger</value>
			</value-param>
			<value-param>
				<name>configurator</name>
				<value>org.exoplatform.services.log.impl.Log4JConfigurator</value>
			</value-param>
			<properties-param>
				<name>properties</name>
				<description>Log4J properties</description>
				<property name="log4j.rootLogger" value="INFO, stdout, file" />
				<property name="log4j.appender.stdout" value="org.apache.log4j.ConsoleAppender" />
				<property name="log4j.appender.stdout.threshold" value="INFO" />
				<property name="log4j.appender.stdout.layout" value="org.apache.log4j.PatternLayout" />
				<property name="log4j.appender.stdout.layout.ConversionPattern" value="%d{dd.MM.yyyy HH:mm:ss} *%-5p* [%t] %c{1}: %m (%F, line %L) %n" />
				<property name="log4j.appender.file" value="org.apache.log4j.FileAppender" />
				<property name="log4j.appender.file.File" value="target/jcr.log" />
				<property name="log4j.appender.file.layout" value="org.apache.log4j.PatternLayout" />
				<property name="log4j.appender.file.layout.ConversionPattern" value="%d{dd.MM.yyyy HH:mm:ss} *%-5p* [%t] %c{1}: %m (%F, line %L) %n" />
				<!-- property name="log4j.category.ext.BackupScheduler" value="DEBUG"/>
        <property name="log4j.category.ext.BackupManagerImpl" value="DEBUG"/ -->
			</properties-param>
		</init-params>
	</component>

	<component>
		<key>org.exoplatform.services.resources.LocaleConfigService</key>
		<type>org.exoplatform.services.resources.impl.LocaleConfigServiceImpl</type>
		<init-params>
			<value-param>
				<name>locale.config.file</name>
				<value>classpath:/conf/standalone/test-locales-config.xml</value>
			</value-param>
		</init-params>
	</component>



	<!-- Dependencies	-->
	<component>
		<type>org.exoplatform.container.xml.PortalContainerInfo</type>
	</component>

	<component>
		<key>javax.servlet.ServletContext</key>
		<type>org.exoplatform.test.mocks.servlet.MockServletContext</type>
	</component>

	<component>
		<key>org.exoplatform.webui.ext.UIExtensionManager</key>
		<type>org.exoplatform.webui.ext.impl.UIExtensionManagerImpl</type>
	</component>
  
  <component>
    <type>org.exoplatform.services.wcm.TestStartupServiceConfiguration</type>
  </component>
  
  <component>
   <key>org.exoplatform.services.cms.taxonomy.TaxonomyService</key>  
   <type>org.exoplatform.services.cms.taxonomy.impl.TaxonomyServiceImpl</type>
   <init-params>
      <object-param>   
        <name>defaultPermission.configuration</name>   
         <object type="org.exoplatform.services.cms.taxonomy.impl.TaxonomyTreeDefaultUserPermission">
           <field name="permissions">
             <collection type="java.util.ArrayList">               
               <value>                            
                 <object type="org.exoplatform.services.cms.taxonomy.impl.TaxonomyTreeDefaultUserPermission$Permission">             
                   <field name="identity"><string>*:/platform/administrators</string></field>
                   <field name="read"><string>true</string></field>                
                   <field name="addNode"><string>true</string></field>                
                   <field name="setProperty"><string>true</string></field>                
                   <field name="remove"><string>true</string></field>                  
                 </object>  
               </value>
                <value>                            
                  <object type="org.exoplatform.services.cms.taxonomy.impl.TaxonomyTreeDefaultUserPermission$Permission">             
                    <field name="identity"><string>*:/platform/users</string></field>
                    <field name="read"><string>true</string></field>                
                    <field name="addNode"><string>true</string></field>                
                    <field name="setProperty"><string>true</string></field>                
                    <field name="remove"><string>false</string></field>                  
                  </object>  
                </value>                        
             </collection>
           </field>
         </object>
      </object-param>
   </init-params>   
  </component>



	<!-- Application -->
	<component>
		<key>org.exoplatform.services.wcm.search.SiteSearchService</key>
		<type>org.exoplatform.services.wcm.search.SiteSearchServiceImpl</type>
		<component-plugins>
			<component-plugin>
				<name>ExcludeMimeTypes</name>
				<set-method>addExcludeIncludeDataTypePlugin</set-method>
				<type>org.exoplatform.services.wcm.search.ExcludeIncludeDataTypePlugin</type>
				<init-params>
					<properties-param>
						<name>search.exclude.datatypes</name>
						<description>exclude some data type when search</description>
						<property name="mimetypes" value="text/css,text/javascript,application/x-javascript,text/ecmascript" />
					</properties-param>
				</init-params>
			</component-plugin>
		</component-plugins>
	</component>

	<external-component-plugins>
		<target-component>org.exoplatform.services.listener.ListenerService</target-component>
		<component-plugin>
			<name>UserPortalConfigService.page.onCreate</name>
			<set-method>addListener</set-method>
			<type>org.exoplatform.services.wcm.search.listener.page.MockCreatePageEventListener</type>
			<description>this listener update publication state of content when page is created</description>
		</component-plugin>
		<component-plugin>
			<name>UserPortalConfigService.page.onUpdate</name>
			<set-method>addListener</set-method>
			<type>org.exoplatform.services.wcm.search.listener.page.MockUpdatePageEventListener</type>
			<description>this listener update publication state of content when page is updated</description>
		</component-plugin>
		<component-plugin>
			<name>UserPortalConfigService.page.onRemove</name>
			<set-method>addListener</set-method>
			<type>org.exoplatform.services.wcm.search.listener.page.MockRemovePageEventListener</type>
			<description>this listener update publication state of content when page is removed</description>
		</component-plugin>
		<component-plugin>
			<name>UserPortalConfigService.navigation.onUpdate</name>
			<set-method>addListener</set-method>
			<type>org.exoplatform.services.wcm.search.listener.navigation.MockUpdateNavigationEventListener</type>
			<description>this listener update publication state of content when navigation is updated</description>
		</component-plugin>
		<component-plugin>
			<name>UserPortalConfigService.navigation.onRemove</name>
			<set-method>addListener</set-method>
			<type>org.exoplatform.services.wcm.search.listener.navigation.MockRemoveNavigationEventListener</type>
			<description>this listener update publication state of content when navigation is removed</description>
		</component-plugin>
	</external-component-plugins>

	<!-- Imports -->
	<import>classpath:/conf/standalone/test-portal-configuration.xml</import>
	<import>classpath:/conf/standalone/test-system-configuration.xml</import>
	<import>classpath:/conf/standalone/test-jcr-configuration.xml</import>
	<import>classpath:/conf/standalone/test-dms-system-configuration.xml</import>
	<import>classpath:/conf/standalone/test-jcr-component-plugins-configuration.xml</import>

</configuration>
