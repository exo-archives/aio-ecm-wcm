<?xml version="1.0" encoding="ISO-8859-1"?>
<configuration>

	<!--  Environment -->
	<component>
		<key>org.exoplatform.services.log.LogConfigurationInitializer</key>
		<type>org.exoplatform.services.log.LogConfigurationInitializer</type>
		<init-params>
			<value-param>
				<name>logger</name>
				<value>org.exoplatform.services.log.impl.BufferedLog4JLogger</value>
			</value-param>
			<value-param>
				<name>configurator</name>
				<value>org.exoplatform.services.log.impl.Log4JConfigurator</value>
			</value-param>
			<properties-param>
				<name>properties</name>
				<description>Log4J properties</description>
				<property name="log4j.rootLogger" value="INFO, stdout, file" />
				<property name="log4j.appender.stdout" value="org.apache.log4j.ConsoleAppender" />
				<property name="log4j.appender.stdout.threshold" value="INFO" />
				<property name="log4j.appender.stdout.layout" value="org.apache.log4j.PatternLayout" />
				<property name="log4j.appender.stdout.layout.ConversionPattern" value="%d{dd.MM.yyyy HH:mm:ss} *%-5p* [%t] %c{1}: %m (%F, line %L) %n" />
				<property name="log4j.appender.file" value="org.apache.log4j.FileAppender" />
				<property name="log4j.appender.file.File" value="target/jcr.log" />
				<property name="log4j.appender.file.layout" value="org.apache.log4j.PatternLayout" />
				<property name="log4j.appender.file.layout.ConversionPattern" value="%d{dd.MM.yyyy HH:mm:ss} *%-5p* [%t] %c{1}: %m (%F, line %L) %n" />
				<!-- property name="log4j.category.ext.BackupScheduler" value="DEBUG"/>
        <property name="log4j.category.ext.BackupManagerImpl" value="DEBUG"/ -->
			</properties-param>
		</init-params>
	</component>

	<component>
		<key>org.exoplatform.services.resources.LocaleConfigService</key>
		<type>org.exoplatform.services.resources.impl.LocaleConfigServiceImpl</type>
		<init-params>
			<value-param>
				<name>locale.config.file</name>
				<value>classpath:/conf/standalone/test-locales-config.xml</value>
			</value-param>
		</init-params>
	</component>



	<!-- Dependencies	-->
	<component>
		<type>org.exoplatform.container.xml.PortalContainerInfo</type>
	</component>

	<component>
		<key>javax.servlet.ServletContext</key>
		<type>org.exoplatform.test.mocks.servlet.MockServletContext</type>
	</component>

	<component>
		<key>org.exoplatform.webui.ext.UIExtensionManager</key>
		<type>org.exoplatform.webui.ext.impl.UIExtensionManagerImpl</type>
	</component>



	<!-- Application -->
	<component>
		<key>org.exoplatform.services.wcm.publication.WCMPublicationService</key>
		<type>org.exoplatform.services.wcm.publication.WCMPublicationServiceImpl</type>
	</component>

	<component>
		<key>org.exoplatform.services.wcm.metadata.PageMetadataService</key>
		<type>org.exoplatform.services.wcm.metadata.PageMetadataServiceImpl</type>
	</component>

	<component>
		<type>org.exoplatform.services.wcm.publication.lifecycle.stageversion.StageAndVersionPublicationInitializerService</type>
	</component>

	<external-component-plugins>
		<target-component>org.exoplatform.services.jcr.RepositoryService</target-component>
		<component-plugin>
			<name>add.nodeType</name>
			<set-method>addPlugin</set-method>
			<type>org.exoplatform.services.jcr.impl.AddNodeTypePlugin</type>
			<priority>99</priority>
			<init-params>
				<values-param>
					<name>autoCreatedInNewRepository</name>
					<description>Node types configuration file</description>
					<value>classpath:/conf/test-wcm-publication-nodetypes.xml</value>
				</values-param>
			</init-params>
		</component-plugin>
	</external-component-plugins>

	<external-component-plugins>
		<target-component>org.exoplatform.services.listener.ListenerService</target-component>
		<component-plugin>
			<name>UserPortalConfigService.page.onCreate</name>
			<set-method>addListener</set-method>
			<type>org.exoplatform.services.wcm.publication.listener.page.MockCreatePageEventListener</type>
			<description>this listener update publication state of content when page is created</description>
		</component-plugin>
		<component-plugin>
			<name>UserPortalConfigService.page.onUpdate</name>
			<set-method>addListener</set-method>
			<type>org.exoplatform.services.wcm.publication.listener.page.MockUpdatePageEventListener</type>
			<description>this listener update publication state of content when page is updated</description>
		</component-plugin>
		<component-plugin>
			<name>UserPortalConfigService.page.onRemove</name>
			<set-method>addListener</set-method>
			<type>org.exoplatform.services.wcm.publication.listener.page.MockRemovePageEventListener</type>
			<description>this listener update publication state of content when page is removed</description>
		</component-plugin>
		<component-plugin>
			<name>UserPortalConfigService.navigation.onUpdate</name>
			<set-method>addListener</set-method>
			<type>org.exoplatform.services.wcm.publication.listener.navigation.MockUpdateNavigationEventListener</type>
			<description>this listener update publication state of content when navigation is updated</description>
		</component-plugin>
		<component-plugin>
			<name>UserPortalConfigService.navigation.onRemove</name>
			<set-method>addListener</set-method>
			<type>org.exoplatform.services.wcm.publication.listener.navigation.MockRemoveNavigationEventListener</type>
			<description>this listener update publication state of content when navigation is removed</description>
		</component-plugin>
	</external-component-plugins>



	<!-- Imports -->
	<import>classpath:/conf/standalone/test-portal-configuration.xml</import>
	<import>classpath:/conf/standalone/test-system-configuration.xml</import>
	<import>classpath:/conf/standalone/test-jcr-configuration.xml</import>
	<import>classpath:/conf/standalone/test-dms-system-configuration.xml</import>
	<import>classpath:/conf/standalone/test-jcr-component-plugins-configuration.xml</import>

</configuration>
