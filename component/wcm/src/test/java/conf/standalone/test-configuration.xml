<?xml version="1.0" encoding="ISO-8859-1"?>
<configuration>

	<!--  Environment -->
	<component>
		<key>org.exoplatform.services.log.LogConfigurationInitializer</key>
		<type>org.exoplatform.services.log.LogConfigurationInitializer</type>
		<init-params>
			<value-param>
				<name>logger</name>
				<value>org.exoplatform.services.log.impl.BufferedLog4JLogger</value>
			</value-param>
			<value-param>
				<name>configurator</name>
				<value>org.exoplatform.services.log.impl.Log4JConfigurator</value>
			</value-param>
			<properties-param>
				<name>properties</name>
				<description>Log4J properties</description>
				<property name="log4j.rootLogger" value="INFO, stdout, file" />
				<property name="log4j.appender.stdout" value="org.apache.log4j.ConsoleAppender" />
				<property name="log4j.appender.stdout.threshold" value="INFO" />
				<property name="log4j.appender.stdout.layout" value="org.apache.log4j.PatternLayout" />
				<property name="log4j.appender.stdout.layout.ConversionPattern" value="%d{dd.MM.yyyy HH:mm:ss} *%-5p* [%t] %c{1}: %m (%F, line %L) %n" />
				<property name="log4j.appender.file" value="org.apache.log4j.FileAppender" />
				<property name="log4j.appender.file.File" value="target/jcr.log" />
				<property name="log4j.appender.file.layout" value="org.apache.log4j.PatternLayout" />
				<property name="log4j.appender.file.layout.ConversionPattern" value="%d{dd.MM.yyyy HH:mm:ss} *%-5p* [%t] %c{1}: %m (%F, line %L) %n" />
				<!-- property name="log4j.category.ext.BackupScheduler" value="DEBUG"/>
        <property name="log4j.category.ext.BackupManagerImpl" value="DEBUG"/ -->
			</properties-param>
		</init-params>
	</component>

	<component>
		<key>org.exoplatform.services.resources.LocaleConfigService</key>
		<type>org.exoplatform.services.resources.impl.LocaleConfigServiceImpl</type>
		<init-params>
			<value-param>
				<name>locale.config.file</name>
				<value>classpath:/conf/standalone/test-locales-config.xml</value>
			</value-param>
		</init-params>
	</component>



	<!-- Dependencies	-->
	<component>
		<type>org.exoplatform.container.xml.PortalContainerInfo</type>
	</component>
	
	<component>
		<key>javax.servlet.ServletContext</key>
		<type>org.exoplatform.test.mocks.servlet.MockServletContext</type>
	</component>

	<component>
		<key>org.exoplatform.webui.ext.UIExtensionManager</key>
		<type>org.exoplatform.webui.ext.impl.UIExtensionManagerImpl</type>
	</component>
 
  <component>
    <type>org.exoplatform.services.wcm.TestStartupServiceConfiguration</type>
  </component>
	


	<!-- Application -->
	<component>
		<key>org.exoplatform.services.wcm.portal.LivePortalManagerService</key>
		<type>org.exoplatform.services.wcm.portal.impl.LivePortalManagerServiceImpl</type>
	</component>

	<component>
		<type>org.exoplatform.services.wcm.navigation.NavigationService</type>
	</component>

	<component>
		<type>org.exoplatform.services.wcm.images.RESTImagesRendererService</type>
	</component>

	<component>
		<key>org.exoplatform.services.wcm.portal.artifacts.CreatePortalArtifactsService</key>
		<type>org.exoplatform.services.wcm.portal.artifacts.CreatePortalArtifactsServiceImpl</type>
	</component>
 
  <component>
    <key>org.exoplatform.services.wcm.portal.artifacts.RemovePortalArtifactsService</key>
    <type>org.exoplatform.services.wcm.portal.artifacts.RemovePortalArtifactsServiceImpl</type>
  </component>

	<component>
		<key>org.exoplatform.services.wcm.link.LiveLinkManagerService</key>
		<type>org.exoplatform.services.wcm.link.LiveLinkManagerServiceImpl</type>
		<init-params>
			<properties-param>
				<name>server.config</name>
				<description>server.address</description>
				<property name="scheme" value="http" />
				<property name="hostName" value="localhost" />
				<property name="port" value="8080" />
			</properties-param>
		</init-params>
	</component>

	<component>
		<key>org.exoplatform.services.wcm.core.WebSchemaConfigService</key>
		<type>org.exoplatform.services.wcm.core.impl.WebSchemaConfigServiceImpl</type>
		<component-plugins>
			<component-plugin>
				<name>CSSFileHandler</name>
				<set-method>addWebSchemaHandler</set-method>
				<type>org.exoplatform.services.wcm.skin.CSSFileHandler</type>
			</component-plugin>
			<component-plugin>
				<name>JSFileHandler</name>
				<set-method>addWebSchemaHandler</set-method>
				<type>org.exoplatform.services.wcm.javascript.JSFileHandler</type>
			</component-plugin>
			<component-plugin>
				<name>WebContentSchemaHandler</name>
				<set-method>addWebSchemaHandler</set-method>
				<type>org.exoplatform.services.wcm.webcontent.WebContentSchemaHandler</type>
			</component-plugin>
			<component-plugin>
				<name>HTMLFileSchemaHandler</name>
				<set-method>addWebSchemaHandler</set-method>
				<type>org.exoplatform.services.wcm.webcontent.HTMLFileSchemaHandler</type>
			</component-plugin>
			<component-plugin>
				<name>PortalFolderSchemaHandler</name>
				<set-method>addWebSchemaHandler</set-method>
				<type>org.exoplatform.services.wcm.portal.PortalFolderSchemaHandler</type>
			</component-plugin>
		</component-plugins>
	</component>

	<component>
		<key>org.exoplatform.services.wcm.core.WCMService</key>
		<type>org.exoplatform.services.wcm.core.impl.WCMServiceImpl</type>
	</component>

	<component>
		<key>org.exoplatform.services.wcm.skin.XSkinService</key>
		<type>org.exoplatform.services.wcm.skin.XSkinService</type>
	</component>

	<component>
		<key>org.exoplatform.services.wcm.javascript.XJavascriptService</key>
		<type>org.exoplatform.services.wcm.javascript.XJavascriptService</type>
	</component>

	<component>
		<key>org.exoplatform.services.wcm.webcontent.TOCGeneratorService</key>
		<type>org.exoplatform.services.wcm.webcontent.TOCGeneratorService</type>
	</component>

	<component>
		<key>org.exoplatform.services.jcr.ext.classify.NodeClassifyService</key>
		<type>org.exoplatform.services.jcr.ext.classify.impl.NodeClassifyServiceImpl</type>
		<component-plugins>
			<component-plugin>
				<name>AlphabetClassifyPlugin</name>
				<set-method>addClassifyPlugin</set-method>
				<type>org.exoplatform.services.jcr.ext.classify.impl.AlphabetClassifyPlugin</type>
			</component-plugin>
			<component-plugin>
				<name>DateTimeClassifyPlugin</name>
				<set-method>addClassifyPlugin</set-method>
				<type>org.exoplatform.services.jcr.ext.classify.impl.DateTimeClassifyPlugin</type>
				<init-params>
					<properties-param>
						<name>plugin-params</name>
						<description>service-params</description>
						<property name="DateTimeTemplate" value="YYYY-#{YYYY+4}/MM" />
						<property name="DateTimePropertyName" value="" />
						<property name="StartTime" value="2002-2" />
						<property name="EndTime" value="2020-9" />
					</properties-param>
				</init-params>
			</component-plugin>
			<component-plugin>
				<name>TypeClassifyPlugin</name>
				<set-method>addClassifyPlugin</set-method>
				<type>org.exoplatform.services.jcr.ext.classify.impl.TypeClassifyPlugin</type>
			</component-plugin>
		</component-plugins>
	</component>
	<external-component-plugins>
		<target-component>org.exoplatform.services.jcr.RepositoryService</target-component>
		<component-plugin>
			<name>add.nodeType</name>
			<set-method>addPlugin</set-method>
			<type>org.exoplatform.services.jcr.impl.AddNodeTypePlugin</type>
			<priority>98</priority>
			<init-params>
				<values-param>
					<name>autoCreatedInNewRepository</name>
					<description>Node types configuration file</description>
					<value>classpath:/conf/test-wcm-nodetypes.xml</value>
				</values-param>
			</init-params>
		</component-plugin>
	</external-component-plugins>

	<external-component-plugins>
		<target-component>org.exoplatform.services.listener.ListenerService</target-component>
		<component-plugin>
			<name>UserPortalConfigService.portal.event.createPortal</name>
			<set-method>addListener</set-method>
			<type>org.exoplatform.services.wcm.portal.listener.CreateLivePortalEventListener</type>
			<description>this listener create new live portal content storage</description>
		</component-plugin>
		<component-plugin>
			<name>UserPortalConfigService.portal.event.removePortal</name>
			<set-method>addListener</set-method>
			<type>org.exoplatform.services.wcm.portal.listener.RemoveLivePortalEventListener</type>
			<description>this listener new live portal content storage</description>
		</component-plugin>
	</external-component-plugins>
 
  <external-component-plugins>
    <target-component>org.exoplatform.services.jcr.impl.ext.action.SessionActionCatalog</target-component>    
    <component-plugin>
      <name>addActions</name>
      <set-method>addPlugin</set-method>
      <type>org.exoplatform.services.jcr.impl.ext.action.AddActionsPlugin</type>
      <description>Reload all templates after edit</description>
      <init-params>
        <object-param>
          <name>actions</name>
          <object type="org.exoplatform.services.jcr.impl.ext.action.AddActionsPlugin$ActionsConfig">
            <field  name="actions">
              <collection type="java.util.ArrayList">               
                <value>
                  <object type="org.exoplatform.services.jcr.impl.ext.action.ActionConfiguration">
                    <field  name="workspace"><string>dms-system</string></field>
                    <field  name="path"><string>/exo:ecm/views/templates/</string></field>
                    <field  name="isDeep"><boolean>true</boolean></field>
                    <field  name="nodeTypes"><string>exo:template</string></field>
                    <field  name="eventTypes"><string>changeProperty</string></field>                                      
                    <field  name="actionClassName"><string>org.exoplatform.services.wcm.template.TemplateModificationAction</string></field>
                  </object>
                </value>
              </collection>
            </field>
          </object>
        </object-param>
      </init-params>
    </component-plugin>   
  </external-component-plugins>
	
 

	<!-- Imports -->
	<import>classpath:/conf/standalone/test-portal-configuration.xml</import>
	<import>classpath:/conf/standalone/test-system-configuration.xml</import>
	<import>classpath:/conf/standalone/test-jcr-configuration.xml</import>
	<import>classpath:/conf/standalone/test-dms-system-configuration.xml</import>
	<import>classpath:/conf/standalone/test-jcr-component-plugins-configuration.xml</import>
		
</configuration>
